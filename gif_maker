using PyPlot
using JLD2


pygui()

dir = "elongation2"

sourcedir = "/home/lai/Dropbox/dokt/code/data/$dir"

datadir="/home/lai/Dropbox/dokt/code/gif_pics/$dir"

if !isdir("$datadir")
    mkdir("$datadir")
end

#figsize=(9,5))

ratios = []
steps = []
for i in 50:50:14000



    # fig = figure()
    # ax1=fig[:gca]()#, aspect="equal")
    #ax1[:plot_wireframe](x,y,z)
    #ax1[:set_axis_off]()
    #ax2=fig[:add_subplot](1,2,2,projection="3d", aspect="equal")
    #ax2[:plot_wireframe](x,y,z)
    #ax2[:set_axis_off]()

    # if i % 500 == 0
    @load "$sourcedir/data$(lpad(i,5,"0")).jld2" data
    #global allp
    #allp = cat(dims=3, allp, points2)
    #global x,y,z
    points2 = data[1]
    #(x, y, z) = [points2[j,:] for j in 1:3]
    # # end
    # ax1[:scatter](x,y,z, s=1, label="stabil",color="k")
    # lim_low = -7
    # lim_hi = 7
    # ax1[:set_xlim](lim_low, lim_hi)
    # ax1[:set_ylim](lim_low, lim_hi)
    # ax1[:set_zlim](lim_low, lim_hi)
    global ratios, steps
    ratio = (maximum(points2[3,:]) - minimum(points2[3,:])) / (maximum(points2[1,:]) - minimum(points2[1,:]))
    push!(ratios, ratio)
    push!(steps, i)
    # ax1[:set_title]("step $i, H=$(round.(H0, digits=3)), c/a = $(round(ratio, digits=3))")
    # ax1[:set_xlabel]("x axis")
    # ax1[:set_ylabel]("y axis")
    # ax1[:set_zlabel]("z axis")
    #
    # fig = figure()
    # ax1=fig[:gca](projection="3d")#, aspect="equal")
    # #ax1[:plot_wireframe](x,y,z)
    # #ax1[:set_axis_off]()
    # #ax2=fig[:add_subplot](1,2,2,projection="3d", aspect="equal")
    # #ax2[:plot_wireframe](x,y,z)
    # #ax2[:set_axis_off]()
    #
    # # if i % 500 == 0
    # @load "$sourcedir/data$(lpad(i,5,"0")).jld2" data
    # #global allp
    # #allp = cat(dims=3, allp, points2)
    # #global x,y,z
    # points2, H0 = data[1], data[3]
    # (x, y, z) = [points2[j,:] for j in 1:3]
    # # end
    # ax1[:scatter](x,y,z, s=1, label="stabil",color="k")
    # lim_low = -7
    # lim_hi = 7
    # ax1[:set_xlim](lim_low, lim_hi)
    # ax1[:set_ylim](lim_low, lim_hi)
    # ax1[:set_zlim](lim_low, lim_hi)
    # ratio = (maximum(points2[3,:]) - minimum(points2[3,:])) / (maximum(points2[1,:]) - minimum(points2[1,:]))
    # ax1[:set_title]("step $i, H=$(round.(H0, digits=3)), c/a = $(round(ratio, digits=3))")
    # ax1[:set_xlabel]("x axis")
    # ax1[:set_ylabel]("y axis")
    # ax1[:set_zlabel]("z axis")
    #ax1[:legend]()
    #@load "./data/simul/points$i.jld2" points2

    # (x, y, z) = [points2[j,:] for j in 1:3]
    # # end
    # ax2[:scatter](x,y,z, s=3, label="not-stabil")#,color="k")
    # ax2[:set_xlim](-2,2)
    # ax2[:set_ylim](-2,2)
    # ax2[:set_zlim](-2,2)
    # ax2[:set_title]("No stabilization")
    # ax2[:set_xlabel]("x axis")
    # ax2[:set_ylabel]("y axis")
    # ax2[:set_zlabel]("z axis")
    # #ax2[:legend]()
    #
    #fig[:savefig]("$datadir/$(lpad(i,5,"0")).png")
    #plt[:show]()
    #plt[:close]("all")
end

fig = figure()
ax1=fig[:gca]()


ax1[:plot](steps, ratios, color="k")

#ax1[:set_title]("step $i, H=$(round.(H0, digits=3)), c/a = $(round(ratio, digits=3))")
ax1[:set_title]("Droplet aspect ratio c/a evolution with number of iterations")
ax1[:set_xlabel]("Iterations",fontsize=12)
ax1[:set_ylabel]("c/a", fontsize=12)
ax1[:set_xlim](0,13000)
ax1[:set_ylim](0,14)
ax1[:grid]()

plt[:show]()



#ax[:quiver](x,y,z,vnx,vny,vnz, length=2, arrow_length_ratio=0.5)

#ax[:quiver](x,y,z,Hnx,Hny,Hnz, length=0.3, arrow_length_ratio=0.5)
#ax[:quiver](x,y,z,Htx,Hty,Htz, length=0.3, arrow_length_ratio=0.5)
#ax[:quiver](x,y,z,Hx,Hy,Hz, length=0.3)
